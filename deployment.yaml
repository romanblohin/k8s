apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-sf
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.21.1-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /etc/nginx/conf/
        - name: config
          mountPath: /etc/nginx
      volumes:
      - name: secret-volume
        secret:
          secretName: auth-basic
          items:
          - key: htpasswd
            path: htpasswd
      - name: config
        configMap:
          name: nginx-config
          items:
          - key: nginx.conf
            path: nginx.conf

---
apiVersion: v1
kind: Service
metadata:
  name: sf-webserver
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |

    worker_processes  1;
    events {
      worker_connections  10240;
    }

    http {
      server {
          listen       80;
          server_name  localhost;
          auth_basic           "Please input login/password";
          auth_basic_user_file /etc/nginx/conf/htpasswd;
          
          location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
      }
    }

---
apiVersion: v1
kind: Secret
metadata:
  name: auth-basic
type: Opaque
stringData:
  htpasswd: |
    user1:$apr1$DB478a.o$4poQo6Lrj3wsQ6XqpjwUl/
